// <auto-generated />
using System;
using DepoYazılımAPI.Persistence.Concretes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepoYazılımAPI.Persistence.Migrations
{
    [DbContext(typeof(DepoYazılımAPIDbContext))]
    [Migration("20231106205321_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepoYazılımAPI.Domin.Entity.CustomerItem.CustomerItem", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<string>("BusinessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MK1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MK2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomerItems");
                });

            modelBuilder.Entity("DepoYazılımAPI.Domin.Entity.StockCard.Barcode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("Barcodes")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockCodeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StockCodeID");

                    b.ToTable("Barcodes");
                });

            modelBuilder.Entity("DepoYazılımAPI.Domin.Entity.StockCard.StockCardRecord", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdditionalFields")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Code1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("Lock")
                        .HasColumnType("bit");

                    b.Property<string>("MK1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MK2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PurchasePrice1")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<decimal?>("PurchasePrice2")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<string>("PurchaseVATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SellingPrice1")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<decimal?>("SellingPrice2")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<string>("StockCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure1Denominator")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<decimal?>("UnitOfMeasure1Numerator")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<string>("UnitOfMeasure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure2Denominator")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<decimal?>("UnitOfMeasure2Numerator")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<string>("UnitOfMeasure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VATRate")
                        .HasColumnType("decimal(28, 8)");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemRecords");
                });

            modelBuilder.Entity("DepoYazılımAPI.Domin.Entity.StockCard.Barcode", b =>
                {
                    b.HasOne("DepoYazılımAPI.Domin.Entity.StockCard.StockCardRecord", "StockCode")
                        .WithMany()
                        .HasForeignKey("StockCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockCode");
                });
#pragma warning restore 612, 618
        }
    }
}
